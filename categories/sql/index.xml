<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on Wahab Ahmad</title>
    <link>https://w28ahmad.github.io/categories/sql/</link>
    <description>Recent content in SQL on Wahab Ahmad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Oct 2023 21:48:01 -0400</lastBuildDate><atom:link href="https://w28ahmad.github.io/categories/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Timestamps and Timezones</title>
      <link>https://w28ahmad.github.io/post/understanding-timestamps/</link>
      <pubDate>Fri, 20 Oct 2023 21:48:01 -0400</pubDate>
      
      <guid>https://w28ahmad.github.io/post/understanding-timestamps/</guid>
      <description>Dates Dates are generally formed of 3 triplets, namely, {Day, Month, Year}. This already can create a lot of confusion around the world as they are ordered differently. For example, the date {16, 02, 2014} can be written as:
Additionally, there are many ways to seperate these triplets. Some use / whereas others use - and .. All this variation was sandardized using the ISO-8601.
Timestamps This standard allows us the view the same time regardless of where we live.</description>
    </item>
    
    <item>
      <title>Reviewing SQL</title>
      <link>https://w28ahmad.github.io/post/sql-review/</link>
      <pubDate>Sat, 02 Sep 2023 23:31:19 -0400</pubDate>
      
      <guid>https://w28ahmad.github.io/post/sql-review/</guid>
      <description>A Brief Review of SQL Queries SELECT &amp;lt;columns&amp;gt; FROM &amp;lt;table&amp;gt; WHERE &amp;lt;predicate&amp;gt; GROUP BY &amp;lt;columns&amp;gt; HAVING &amp;lt;predicate&amp;gt; ORDER BY &amp;lt;columns&amp;gt; LIMIT &amp;lt;num&amp;gt;; We have the following $7$ basic operations when querying data from a single table. We need to SELECT certain columns FROM a table, keep rows WHERE a certain condition matches. Potentially, GROUP columns that HAVE another condition matching (within the groups) and aggregate those results using aggregation functions. We can also ORDER BY one or more columns.</description>
    </item>
    
  </channel>
</rss>
